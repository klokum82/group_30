https://github.com/klokum82/JSON.git
https://github.com/klokum82/XML.git
https://github.com/klokum82/TXT.git

GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
На вэбе Repositories --> New --> Repos Name:JSON --> Check "Add a README file" --> Press "Create repository"

 5. Клонировать репозиторий JSON на локальный компьютер. 
$ git clone git@github.com:klokum82/JSON.git


 6. Внутри локального JSON создать файл “new.json”.
$ touch test.json

 7. Добавить файл под гит.
$ git add test.json

 8. Закоммитить файл.
$ git commit -m "comment"

 9. Отправить файл на внешний GitHub репозиторий.
$ git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
$ vim test.json 
{
"NSF: {"name": "Aleksey",
"surname": "Mishakov",
"father_name": "Valeryevich"},
"age": 40,
"pets": 12,
"desired_salary": 2000$
}

 11. Отправить изменения на внешний репозиторий.
$ git commit -m "FIO, age, number of pets, future desired salary" && git push

 12. Создать файл preferences.json
$ touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
$ vim preferences.json
{
"fav_movie": "Armor of God",
"fav_TVSHOW": "Supernatural",
"fav_food": "Borch",
"fav_season": "Spring and Autumn",
"country_to_visit": "USSR"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
$ touch skills.json

$ vim skills.json
{
        "skill_1": "HTTP",
        "skill_2": "GIT",
        "skill_3": "VPN",
        "skill_4": "SQL",
        "skill_5": "Postman",
        "skill_6": "Charles",
        "skill_7": "Fiddler",
        "skill_8": "Android_Studio",
        "skill_9": "XCODE",
        "skill_10": "QA_Theory"
}

 15. Отправить сразу 2 файла на внешний репозиторий.
$ git add . && git commit -m "preferences and skills" && git push

 16. На веб интерфейсе создать файл bug_report.json.
на вэбе Add file --> Create new file --> Name:bug_report.json

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit New File

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Choose bug_report.json --> Edit this file
{
        "summary": "nothing works"
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Press Commit changes

 20. Синхронизировать внешний и локальный репозиторий JSON
$ git pull

XML
 21. Создать внешний репозиторий c названием XML.
На вэбе Repositories --> New --> Repos Name:XML --> Check "Add a README file" --> Press "Create repository"

 22. Клонировать репозиторий XML на локальный компьютер.
$ git clone git@github.com:klokum82/XML.git
Cloning into 'XML'...

 23. Внутри локального XML создать файл “new.xml”.
$ cd XML && touch test.xml

 24. Добавить файл под гит.
$ git add test.xml

 25. Закоммитить файл.
$ git commit -m "xml"

 26. Отправить файл на внешний GitHub репозиторий.
$ git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
$ vim test.xml
<root>
  <NSF>
    <name>Aleksey</name>
    <surname>Mishakov</surname>
    <father_name>Valeryevich</father_name>
  </NSF>
  <age>40</age>
  <pets>12</pets>
  <desired_salary>2000$</desired_salary>
</root>

 28. Отправить изменения на внешний репозиторий.
$ git add test.xml && git commit -m "FIO, age, number of pets, future desired salary" && git push

 29. Создать файл preferences.xml
$ touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
$ vim preferences.xml
<root>
  <fav_movie>Armor of God</fav_movie>
  <fav_TVSHOW>Supernatural</fav_TVSHOW>
  <fav_food>Borch</fav_food>
  <fav_season>Spring and Autumn</fav_season>
  <country_to_visit>USSR</country_to_visit>
</root>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
$ touch skills.xml && vim skills.xml
<root>
  <skill_1>HTTP</skill_1>
  <skill_2>GIT</skill_2>
  <skill_3>VPN</skill_3>
  <skill_4>SQL</skill_4>
  <skill_5>Postman</skill_5>
  <skill_6>Charles</skill_6>
  <skill_7>Fiddler</skill_7>
  <skill_8>Android_Studio</skill_8>
  <skill_9>XCODE</skill_9>
  <skill_10>QA_Theory</skill_10>
</root>

 32. Сделать коммит в одну строку.
 33. Отправить сразу 2 файла на внешний репозиторий.
$ git add . && git commit -m "preferences and skills" && git push

 34. На веб интерфейсе создать файл bug_report.xml.
на вэбе Add file --> Create new file --> Name:bug_report.xml

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit New File

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
Choose bug_report.xml --> Edit this file
<root>
        <summary>nothing works</summary>
</root>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Press Commit changes

 38. Синхронизировать внешний и локальный репозиторий XML
$ git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
На вэбе Repositories --> New --> Repos Name:XML --> Check "Add a README file" --> Press "Create repository"

 2. Клонировать репозиторий TXT на локальный компьютер.
$ git clone git@github.com:klokum82/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
$ cd TXT && touch test.txt

 4. Добавить файл под гит.
$ git add test.txt

 5. Закоммитить файл.
$ git commit -m "TXT"

 6. Отправить файл на внешний GitHub репозиторий.
$ git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
$ vim test.txt

 8. Отправить изменения на внешний репозиторий.
$ git add test.txt && git commit -m "FIO, age, number of pets, future desired salary" && git push

 9. Создать файл preferences.txt
$ touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
$ vim preferences.txt

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
$ touch skills.txt && vim skills.txt

 12. Сделать коммит в одну строку.
 13. Отправить сразу 2 файла на внешний репозиторий.
$ git add . && git commit -m "preferences and skills" && git push

 14. На веб интерфейсе создать файл bug_report.txt.
на вэбе Add file --> Create new file --> Name:bug_report.txt

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit New File

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Choose bug_report.txt --> Edit this file

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Press Commit changes

 18. Синхронизировать внешний и локальный репозиторий TXT
$ git pull
